import express from "express";
import cors from "cors";
import rateLimit, { RateLimitRequestHandler } from "express-rate-limit";
import errorMiddleware from "./middleware/error.middleware";
import validatorMiddleware from "./middleware/validator.middleware";

import { RecipeController } from "./controllers/recipe-controller";
import { RootController } from "./controllers/root-controller";

export class App {
    public app: express.Application;
    public port: number;
    private limiter: RateLimitRequestHandler;
    private rsController: RecipeController;
    private rootController: RootController;

    constructor(port: number) {
        this.app = express();
        this.port = port;
        this.limiter = rateLimit({windowMs: 60000, max: 10});
        this.rsController = new RecipeController();
        this.rootController = new RootController();
        this.useMiddleware();
        this.proxyConfig();
    }

    private useMiddleware() {
        this.app.use(express.json());
        this.app.use(express.urlencoded({extended: true}));
        this.app.use(express.static('public'));
        this.app.use(validatorMiddleware);
        this.app.use("/api/recipe-safe", this.rsController.router);
        this.app.use("/api/", this.rootController.router);
        this.app.use(cors());
        this.app.use(this.limiter);
        this.app.use(errorMiddleware);
    }

    private proxyConfig() {
        this.app.set('trust proxy', 1);
    }

    public listen() {
        this.app.listen(this.port, () => {
            console.log('hot and ready')
        })
    }
}